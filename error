 ML PIPELINE COMPLETED SUCCESSFULLY!
============================================================================

🧪 Post-Execution Options:
✅ Trained model found at: ./models/jvm_troubleshooting_model

Available testing options:
1. Interactive testing with conversation memory (test_model.py)
2. Quick batch testing (quick_test.py)
3. Skip testing

Choose testing option (1-3) [3]: 2
🚀 Running quick batch validation...
📋 Running 5 core JVM troubleshooting tests...
🔄 Loading JVM troubleshooting model...
⏳ This may take a moment for large models...
`torch_dtype` is deprecated! Use `dtype` instead!
✅ Model loaded successfully!
🔧 Parameters: 774,030,080
💾 Device: CPU (stable mode)

======================================================================
🧪 JVM TROUBLESHOOTING MODEL - QUICK BATCH TEST
======================================================================
📊 Testing 5 critical JVM scenarios
🎯 Evaluating response quality and accuracy
⚡ Running on: GPU

1. 🔍 Question: What are common JVM memory issues?
   ⏳ Generating response...
   ❌ Answer: [Generation error: probability tensor contains either `inf`, `nan` or element < 0]

2. 🔍 Question: How do I troubleshoot OutOfMemoryError?
   ⏳ Generating response...
   ❌ Answer: [Generation error: probability tensor contains either `inf`, `nan` or element < 0]

3. 🔍 Question: What JVM parameters should I tune for performance?
   ⏳ Generating response...
   ❌ Answer: [Generation error: probability tensor contains either `inf`, `nan` or element < 0]

4. 🔍 Question: How do I analyze garbage collection logs?
   ⏳ Generating response...
   ❌ Answer: [Generation error: probability tensor contains either `inf`, `nan` or element < 0]

5. 🔍 Question: What causes high CPU usage in JVM applications?
   ⏳ Generating response...
   ❌ Answer: [Generation error: probability tensor contains either `inf`, `nan` or element < 0]

======================================================================
📊 BATCH TEST RESULTS SUMMARY
======================================================================
✅ Successful responses: 0/5 (0.0%)
📏 Average response length: 0 characters
❌ Model performance: POOR - Retraining strongly recommended

🔧 Next Steps:
   • Consider retraining with more data
   • Adjust training parameters
   • Review dataset quality
   • Run interactive testing: python test_model.py
   • Test with custom questions
   • Deploy for production use

✨ Quick test completed!

============================================================================
📚 NEXT STEPS:
============================================================================
• Dataset: Check ./dataset/jvm_troubleshooting_guide/ for generated Q&A pairs
• Model: Check ./models/jvm_troubleshooting_model/ for trained model files
• Testing: Use test_model.py for interactive testing with conversation memory
• Upload: Models and datasets can be uploaded to Hugging Face Hub
• Documentation: See README.md for detailed usage instructions
